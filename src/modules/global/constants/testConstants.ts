const testConstant = {
  ERROR_MESSAGE: "I crashed!",
  ERROR_MESSAGE_GET_BY: "Error message: I crashed!",
  DESCRIPTION_ERROR: "ErrorBoundary",
  ALL_IS_WELL: "All is well!",
  ERROR_BOUNDARY_TEST_1: "renders children when no error occurs",
  ERROR_BOUNDARY_TEST_2: "renders fallback UI when an error is thrown",
  ERROR_BOUNDARY_TEST_3: "logs error to console when an error occurs",
  ERROR_BOUNDARY_TEST_4: "does not crash the app when an error is thrown",
  NO_ERROR: "No errors here!",
  ERROR: "error",
  TEST_ENV_FILE_PATH: "test.tsx",
  ESLINT_TEST_NAME : "ESLint Configuration",
  ESLINT_TEST_CASE_1 : "should warn for unused variables",
  ESLINT_TEST_CASE_2 : "should error for missing dependencies in useEffect",
  ESLINT_TEST_CASE_3 : "should not warn for used variables",
  ESLINT_TEST_CASE_4 : "should not error when explicit-module-boundary-types rule is off",
  ESLINT_TEST_CASE_5 : "should warn for missing dependencies in useEffect when rules are applied",
  FUNCTION : "function",
  LOGIN_SLICE_DESCRIPTION : "loginSlice",
  LOGIN_SLICE_CASE_1 : "should return the initial state",
  LOGIN_SLICE_CASE_2 : "should handle loginSuccess",
  LOGIN_SLICE_CASE_3 : "should handle logout",
  SAMPLE_TOKEN : "nijj237873h2b2j2ak",
  LOCAL_STORAGE : "localStorage",
  PERSIST_DESCRIPTION : "Login Component with Redux Persist",
  PERSIST_TEST_CASE_1 : "persists state across mounts",
  PERSIST_TEST_CASE_2 : "persists state after logout across mounts",
  ENTER_LOGIN : "enter login",
  PERSIST_MESSAGE_1 : "Welcome Dinesh21! your password is 2d1i8n",
  PERSIST_MESSAGE_2 : "You are logged out",
  LOGIN : "login",
  LOGOUT : "logout"
};

export default testConstant;
